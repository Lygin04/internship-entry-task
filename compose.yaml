services:
  internship-entry-task.api:
    image: internship-entry-task.api
    build:
      context: .
      dockerfile: internship-entry-task.Api/Dockerfile
    environment:
      BOARD_SIZE: 5
      WIN_CONDITION: 4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://0.0.0.0:8080"
      HTTP_PORTS: "8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    restart: always
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'game'
    networks:
      - backend
    ports:
      - "50000:5432"
    volumes:
      - postgres_database:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
networks:
  backend:
    driver: bridge

volumes:
  postgres_database: